local fov = 100
local rayLength = 500 -- Adjust the ray length as needed
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Cam = game.Workspace.CurrentCamera
local aimbotEnabled = false

local FOVring = Drawing.new("Circle")
FOVring.Visible = false
FOVring.Thickness = 2
FOVring.Color = Color3.fromRGB(128, 0, 128) -- Purple color
FOVring.Filled = false
FOVring.Radius = fov
FOVring.Position = Cam.ViewportSize / 2

local function updateDrawings()
    local camViewportSize = Cam.ViewportSize
    FOVring.Position = camViewportSize / 2
end

local function onKeyDown(input)
    if input.KeyCode == Enum.KeyCode.Delete then
        RunService:UnbindFromRenderStep("FOVUpdate")
        FOVring:Remove()
    end
end

UserInputService.InputBegan:Connect(onKeyDown)

local function lookAt(target)
    local lookVector = (target - Cam.CFrame.Position).unit
    local newCFrame = CFrame.new(Cam.CFrame.Position, Cam.CFrame.Position + lookVector)
    Cam.CFrame = newCFrame
end

local function isPlayerVisible(player, trg_part)
    local part = player.Character and player.Character:FindFirstChild(trg_part)
    if part then
        local ray = Ray.new(Cam.CFrame.Position, part.Position - Cam.CFrame.Position)
        local hit, hitPosition, hitNormal = workspace:FindPartOnRayWithIgnoreList(ray, {Players.LocalPlayer.Character, player.Character})
        return not hit
    end
    return false
end

local function getClosestVisiblePlayerInFOV(trg_part)
    local nearest = nil
    local last = math.huge
    local playerMousePos = Cam.ViewportSize / 2
    local localPlayerTeam = Players.LocalPlayer.Team

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and player.Team ~= localPlayerTeam then
            if isPlayerVisible(player, trg_part) then
                local part = player.Character and player.Character:FindFirstChild(trg_part)
                if part then
                    local ePos = Cam:WorldToViewportPoint(part.Position)
                    local distance = (Vector2.new(ePos.x, ePos.y) - playerMousePos).Magnitude

                    if distance < last and distance < fov then
                        last = distance
                        nearest = player
                    end
                end
            end
        end
    end

    return nearest
end

local function aimbot()
    local closest = getClosestVisiblePlayerInFOV("Head")
    if closest and closest.Character:FindFirstChild("Head") then
        lookAt(closest.Character.Head.Position)
    end
end

RunService.RenderStepped:Connect(function()
    updateDrawings()
    if aimbotEnabled then
        aimbot()
    end
end)

-- Create a button to toggle aimbot
local aimbotButton = Instance.new("TextButton")
aimbotButton.Text = "Toggle Aimbot"
aimbotButton.Parent = game:GetService("CoreGui") -- Attach to CoreGui to keep it visible even when GUI is closed
aimbotButton.Position = UDim2.new(0, 0, 0, 0) -- Adjust position as needed
aimbotButton.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    if aimbotEnabled then
        aimbotButton.Text = "Aimbot Enabled"
    else
        aimbotButton.Text = "Aimbot Disabled"
    end
end)
